AWSTemplateFormatVersion: '2010-09-09'

Resources:
  MyVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'

  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      AvailabilityZone: 'eu-central-1a'
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true

  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      AvailabilityZone: 'eu-central-1b'
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true

  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      AvailabilityZone: 'eu-central-1a'
      CidrBlock: 10.0.11.0/24
      MapPublicIpOnLaunch: false

  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      AvailabilityZone: 'eu-central-1b'
      CidrBlock: 10.0.12.0/24
      MapPublicIpOnLaunch: false

  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref MyVPC

  DefaultPublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PublicSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Public Security Group
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0 
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0 
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0 


  JumpBox:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      KeyName: Demo
      ImageId: ami-04376654933b081a7
      SecurityGroupIds:
        - !GetAtt PublicSecurityGroup.GroupId
      SubnetId: !Ref PublicSubnet1
      Tags:
      - Key: "Name"
        Value: "Jumpbox"

  WebServer:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      KeyName: Demo
      ImageId: ami-04376654933b081a7
      SecurityGroupIds:
        - !GetAtt PublicSecurityGroup.GroupId
      SubnetId: !Ref PublicSubnet1
      Tags:
      - Key: "Name"
        Value: "WebServer1a"

  WebServer1:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      KeyName: Demo
      ImageId: ami-04376654933b081a7
      SecurityGroupIds:
        - !GetAtt PublicSecurityGroup.GroupId
      SubnetId: !Ref PublicSubnet2
      Tags:
      - Key: "Name"
        Value: "WebServer1b"

  PrivateSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Private Security Group
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !GetAtt PublicSecurityGroup.GroupId
  
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for RDS
      SubnetIds:
      - !Ref PrivateSubnet1
      - !Ref PrivateSubnet2

  RDSDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      DBInstanceIdentifier: MyDBInstance
      DBInstanceClass: db.t2.micro
      Engine: mysql
      MasterUsername: myadmin
      MasterUserPassword: mypassword
      MultiAZ: false
      StorageType: gp2
      VPCSecurityGroups: 
      - !GetAtt PrivateSecurityGroup.GroupId
      AvailabilityZone: eu-central-1a
      DBSubnetGroupName: !Ref DBSubnetGroup

Outputs:
  WebServerInstanceId:
    Description: ID of the WebServer instance
    Value: !Ref WebServer
  RDSInstanceId:
    Description: ID of the RDS instance
    Value: !Ref RDSDBInstance
